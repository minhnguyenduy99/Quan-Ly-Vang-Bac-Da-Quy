<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIProject.Styles"
                    xmlns:customControls="clr-namespace:UIProject.CustomControls"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">
    <Style TargetType="{x:Type customControls:InfoCardLabel}" x:Key="BaseInfoCardStyle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0 10 0 10"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="ContentInfoForeground" Value="{DynamicResource AirForceBlue}"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="All"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="PART_OuterBorder"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Effect="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                                 Path=(materialDesign:ShadowAssist.ShadowDepth), 
                                                 Converter={x:Static converters:ShadowConverter.Instance}}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Effect).(DropShadowEffect.Color)"
                                            From="LightGray" To="Gray"
                                            Duration="0:0:0.3"
                                            />
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                             From=".95" To="1"
                                             Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                             From=".95" To="1"
                                             Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Effect).(DropShadowEffect.Color)"
                                            From="Gray" To="LightGray"
                                            Duration="0:0:0.3"
                                            />
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                             From="1" To=".95"
                                             Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                             From="1" To=".95"
                                             Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type customControls:InfoCardLabel}" x:Key="UIProjectInfoCardLabelStyle">

    </Style>
</ResourceDictionary>